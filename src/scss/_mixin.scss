$legacy-support-for-ie:true;
$keylist:-webkit-,-moz-,-ms-,-o-,"";
@mixin blockCenter{
  margin: {
    left: auto;
    right: auto;
  };
}
@mixin animate($num...){
  @each $key in $keylist{
    #{$key}animation:$num;
  }
}
@mixin keyframs($name){
  @-moz-keyframes #{$name} {
    @content;
  }
  @-webkit-keyframes #{$name} {
    @content
  }
  @-ms-keyframes #{$name} {
    @content
  }
  @-o-keyframes #{$name} {
    @content
  }
  @keyframes #{$name} {
    @content
  }
}
@mixin ceshi{
  border: 1px solid black;
}
@mixin child($i){
  &:nth-of-type(#{$i}){
    @content;
  }
}
@function size($i){
  @return $i/2+px;
}
@function rem($i){
  @return $i/12+rem;
}
@function xsrem($i){
  @return ($i/12)/4+rem
}
@function smrem($i){
  @return ($i/12)/3+rem
}
@function lgrem($i){
  @return ($i/12)/1.3+rem;
}
@mixin scale($num){
  -webkit-transform: scale($num);
  -moz-transform: scale($num);
  -ms-transform: scale($num);
  -o-transform: scale($num);
  transform: scale($num);
}
@mixin clearfix {
  @if $legacy-support-for-ie {
    *zoom: 1;
  }
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
    overflow: hidden;
  }
}
@mixin media($point) {
  @if $point == superbig {
    @media only screen and (max-width: 1200px) { @content; }
  }
  @else if $point ==lg{
    @media only screen and (max-width: 992px)  { @content; }
  }
  @else if $point == md {
    @media only screen and (max-width: 768px) { @content; }
  }
  @else if $point == sm {
    @media only screen and (max-width: 480px) { @content; }
  }
  @else if $point == xs{
    @media only screen and (max-width:320px ) { @content; }
  }
}
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
@mixin transition($num){
  @include css3(transition,$num)
}
@mixin css3($property, $value) {
  @each $prefix in '',-ms-,-moz-, -webkit-,  -o-, {
    #{$prefix}#{$property}: $value;
  }
}
@mixin img{
  width: 100%;
  height: auto;
  display: block;
}
@mixin boxShadow($num){
  -webkit-box-shadow: $num;
  -moz-box-shadow: $num;
  box-shadow: $num;
}
@mixin square($num){
  width: $num;
  height: $num;
  display: block;
}
@mixin lineheight($num){
  height:$num;
  line-height:$num;
}
@mixin borderRadius($num){
  -webkit-border-radius:$num;
  -moz-border-radius:$num;
  border-radius:$num;
}
@mixin active{
  background-color: #caaa43;
  color: #ffffff;
}
@mixin border($num){
  border: rem(1) solid $num;
}
@mixin btn{
  @extend .btn;
}
@mixin pos($top,$left){
  position: absolute;
  top:size($top);
  left:size($left);
}

@mixin ball($radius){
  @include square($radius);
  @include borderRadius($radius);
}
@mixin gradient($gradieng...){

  @each $prefix in '',-ms-,-moz-, -webkit-,  -o-,  {
    background: #{$prefix}linear-gradient($gradieng);
  }
}

@mixin transform($type){
  -webkit-transform: $type;
  -moz-transform: $type;
  -ms-transform: $type;
  -o-transform: $type;
  transform: $type;
}
@mixin translate($num...){
  @include transform(translate($num));
}
@mixin active{
  &.active{
    @include translate(0);
    opacity: 1;
  }
}
.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}
@mixin animateTransition($type,$time){
  @if $type==top{
    opacity: 0;
    transform: translate3d(0, -100%, 0);
    &.active{
      animation-name: fadeInDown;

    }
  }@else if $type==left{
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
    &.active{
      animation-name: fadeInLeft;
    }
  }@else if $type==right{
    opacity: 0;
    transform: translate3d(100%, 0, 0);
    &.active{
      animation-name: fadeInRight;
    }
  }@else if $type==bottom{
    opacity: 0;
    transform: translate3d(0, 100%, 0);
    &.active{
      animation-name: fadeInUp;
    }
  }@else if $type==scale{
    opacity: 0;
    &.active{

    }
  }@else if $type==rotate{
    opacity: 0;
    &.active{

    }
  }
}

@mixin scale($num){
  @include transform(scale($num))
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}
@keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}
@keyframes fadeInDown {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
    transform: translate3d(0, -100%, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}


$sectionBg: #f2f2f2;
$titleColor:#ef5452;
$iclssbg:(1:#ef5553, 2:#f3983f, 3:#b082d4, 4:#46a76d, 5:#718cd1, 6:#c27089, 7:#47b2c6,8:#718cd1);

$animateName:(
        left:left,
        right:right,
        top:top,
        scale:scale,
        bottom:bottom,
        rotate:rotate
);


@each $key,$value in $animateName{
  .items-#{$key}{
    @include animateTransition($value,1s);
  }
}
@mixin rotate3d($num...){
  @include transform(rotate3d($num));
}

@mixin delay($num){
  @for $i from 1 through $num{
    .items-delay-#{$i}{
     animation-delay: $i*0.2s;
    }
  }
}


